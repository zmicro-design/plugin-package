#!/bin/bash
DEFAULT_NETWORK=compose-ingress
# COMPOSE_BIN_PATH=/usr/local/bin/docker-compose
# COMPOSE_VERSION=1.29.1

TMP_INSTALL_SCRIPT=/tmp/get-docker.sh

# Returning a boolean from a bash function
#   [Solved]: Stack Overflow: https://stackoverflow.com/questions/5431909/returning-a-boolean-from-a-bash-function
#
is_docker_installed() {
  which docker >> /dev/null 2>&1
  if [ "$?" != "0" ]; then
    log_debug "[is_docker_installed] Docker not found"
    return 1
  fi

  DOCKER_VERSION=$(get_docker_version)
  log_info "Docker Installed(version: ${DOCKER_VERSION})"
  return 0
}

get_docker_version() {
  echo $(docker version -f {{.Client.Version}})
}

is_network_exist() {
  sudo docker network inspect $DEFAULT_NETWORK >>/dev/null 2>&1
  return $?
}

create_network() {
  # sudo docker network inspect $DEFAULT_NETWORK >>/dev/null 2>&1
  # if [ "$?" != "0" ]; then
  #   sudo docker network create $DEFAULT_NETWORK
  # fi

  if ! is_network_exist; then
    log_info "Create Network: ${DEFAULT_NETWORK}"
    sudo docker network create $DEFAULT_NETWORK >> /dev/null 2>&1
  fi
}

try_to_remove_podman() {
  which podman >>/dev/null 2>&1
  if [ "$?" = "0" ]; then
    log_info "Found podman, removing ..."
    pm remove -y podman

    # Clean
    #   1. docker
    sudo rm -rf `which docker`
    #   2. docker-compose
    sudo rm -rf `which docker-compose`

    # log_info "Upgrade Docker ..."
  fi
}

install_docker_core() {
  # Returning a boolean from a bash function
  #   Useage
  if is_docker_installed; then
    create_network
    return 
  fi

  log_info "Install Docker ..."
  if [ "$(os_is_macos)" = "true" ]; then
    # MacOS
    # 1. CLI
    brew install docker
    # 2. Runtime
    brew install colima
    # 3. Start
    colima start --cpu 4 --memory 8 --disk 100
  else
    # Linux
    sudo curl -fsSL https://get.docker.com -o $TMP_INSTALL_SCRIPT
    sudo sh $TMP_INSTALL_SCRIPT
    # Role
    sudo usermod -aG docker $USER
    # Clean
    sudo rm -f $TMP_INSTALL_SCRIPT
  fi
}

install_docker_compose() {
  zpackage install docker-compose
}

start_docker() {
  if [ "$(os_is_macos)" = "true" ]; then
    return
  fi

  # Linux
  sudo systemctl status docker >> /dev/null 2>&1
  if [ "$?" != "0" ]; then
    log_info "Start Docker daemon ..."
    
    sudo systemctl enable docker
    sudo systemctl start docker
  fi
}

install_docker() {
  if [ "$(os_is_docker)" = "true" ]; then
    log_warn "You are in docker env, use bind /var/run/docker.sock instead of."
    return 
  fi

  try_to_remove_podman

  install_docker_core

  install_docker_compose

  start_docker
}

install_docker