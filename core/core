#!/bin/bash

package::get_path() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::get_path] name is required"
    exit 1
  fi

  echo $PACKAGES_PATH/$name
}

package::get_package_repo_url() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::get_package_repo_url] name is required"
    exit 1
  fi

  echo ${PACKAGES_REPO_PREFIX}${name}
}

package::get_mod_path() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::get_mod_path] name is required"
    exit 1
  fi

  local package_path=$(package::get_path $name)
  echo $package_path/mod
}

package::get_config_path() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::get_config_path] name is required"
    exit 1
  fi

  local package_path=$(package::get_path $name)
  echo $package_path/config
}

package::get_core_path() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::get_core_path] name is required"
    exit 1
  fi

  local package_path=$(package::get_path $name)
  echo $package_path/core
}

package::get_bin_zmicro_path() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::get_bin_zmicro_path] name is required"
    exit 1
  fi

  local package_path=$(package::get_path $name)
  echo $package_path/bin/zmicro
}

package::load_mod() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::load_mod] name is required"
    exit 1
  fi

  local package_mod_path=$(package::get_mod_path $name)
  if [ ! -f $package_mod_path ]; then
    log::error "[$(timestamp)][package::load_mod] name is required"
    exit 1
  fi

  config::load_file $package_mod_path
}

package::load_config() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::load_config] name is required"
    exit 1
  fi

  local config_path=$(package::get_config_path $name)
  if [ -f $config_path ]; then
    config::load_file $config_path
  fi
}

package::load_core() {
  local name=$1
  if [ -z "$name" ]; then
    log::error "[$(timestamp)][package::load_core] name is required"
    exit 1
  fi

  local core_path=$(package::get_core_path $name)
  if [ -f $core_path ]; then
    config::load_file $core_path
  fi
}

package::force_sudo() {
  # use force sudo to get required permissions
  sudo ps >>/dev/null 2>&1
}

export -f package::get_path
export -f package::get_package_repo_url

export -f package::get_mod_path
export -f package::get_config_path
export -f package::get_core_path
export -f package::get_bin_zmicro_path

export -f package::load_mod
export -f package::load_config
export -f package::load_core

# export -f package::release

export -f package::force_sudo
